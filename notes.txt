# WorkFlow : 

# User_Input -> query_processor -> Required_Function_Call 

# types of queries :

#    1) Github_Actions - List Repos, Clone a repo and setup that[ identify project type install dependencies and run], 
        make current dir a git repo and push it to github.
#    2) Project_Setup - setup a new project environment of diff types like Next.js , flask , install basic dependencies.
#    3) File_Handling - search , open and close a file by name in given directory
#    4) App_Handling - Open and  close an app 
#    5) Summarizer - Make a pdf as context and answers the users questions based on that context
    
# Subtasks_in_query :
#     1) List, Clone, Create_New
#     2) setup new project, setup existing project
#     3) Search, Open and Close a file 
#     4) Open and Close a App
#     5) Gives summary of the given pdf or answers the users questions using the pdf as context

# memory required? : 
#     1) No 
#     2) NO 
#     3) No 
#     4) Yes, temp 
-----------------------------------------------------------------------------------------------------------------
speech recognition and voice to speech flow 

User_Input -> speech_recognition -> speech_processor - 1)query_processor, 2)tts
# starting point 
# file handling 
# -------------------------------------------------------------------------
# # from app.functions.file_handler import search_file, open_file, move_file

# # Example: Searching for a file
# # wsl path /home/moiz/myfolder/projects
# # file_path = "/mnt/d/"

# # search_results = search_file("one.txt", file_path)
# # if search_results:
# #     print("Found files:", search_results)
# #     file_to_open = search_results[0]  # Automatically selects the first match
# #     open_file(file_to_open)

# # Example: Moving a file
# # new_path = move_file(file_to_open, "/home/user/Desktop")
# # if new_path:
# #     print(f"File successfully moved to: {new_path}")
# ---------------------------------------------------------------------
# app handling 
# from app.functions.app_handling import open_app, close_app

# while(1):
#     app_name = input()
#     open_app(app_name)

# from app.tts.voice_processor import voice_processor

# while(1):
#     voice_input = input()
#     print(voice_processor(voice_input))

# from app.functions.file_handler import list_files_by_type


# # file_type, file_path=input()
# files = list_files_by_type("ppt","C:\\Users\\Shikhar\\Downloads")
# print(files)